name: pull_request

on: [pull_request]

jobs:
  eslint:
    name: Run TS Project eslint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [20.x, 22.x]

    steps:
      - name: Check out TS Project Git repository
        uses: actions/checkout@v4

      - name: Init nodejs
        uses: ./.github/actions/init-npm
        with:
          node-version: ${{ matrix.node }}

      - name: Run TS Project linters
        uses: wearerequired/lint-action@v2
        with:
          github_token: ${{ secrets.github_token }}
          # Enable linters
          eslint: true
          prettier: true
          eslint_extensions: ts

  openapi-lint:
    name: Run OpenAPI lint Check
    runs-on: ubuntu-latest

    steps:
      - name: Check out TS Project Git repository
        uses: actions/checkout@v4

      - name: Init nodejs
        uses: ./.github/actions/init-npm

      - name: OpenAPI Lint Checks
        run: npx @redocly/cli lint --format=github-actions openapi3.yaml

  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [20.x, 22.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - uses: actions/upload-artifact@v4
        with:
          name: Test-Reporters-node-${{ matrix.node }}
          path: reports/**

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build_image:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: build Docker image
        run: docker build -t test-build:latest .
